// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  email           String           @unique
  name            String?
  image           String?
  password        String
  phone           String?
  ShippingAddress ShippingAddress?
  BillingAddress  BillingAddress?
  Order           Order?           @relation(fields: [orderId], references: [id])
  orderId         String?          @db.ObjectId
}

model ShippingAddress {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  country String @default("Bangladesh")
  street  String @default("1")
  city    String @default("Dhaka")
  zip     String @default("1205")
  email   String
  phone   String
  name    String
  user    users  @relation(fields: [userId], references: [id])
  userId  String @unique @map("userId") @db.ObjectId
}

model BillingAddress {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  country String @default("Bangladesh")
  street  String @default("1")
  city    String @default("Dhaka")
  zip     String @default("1205")
  email   String
  phone   String
  name    String
  user    users  @relation(fields: [userId], references: [id])
  userId  String @unique @map("userId") @db.ObjectId
}

model Products {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  stock           Int               @default(0)
  category        String
  rating          Float
  reviewCount     Int
  brand           String
  SKU             String
  price           Float
  compareAtPrice  Float
  description     String
  image           String
  createdAt       DateTime          @default(now())
  trending        Boolean           @default(false)
  size            Size
  OrderedProducts OrderedProducts[]
}

model OrderedProducts {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  product   Products @relation(fields: [productId], references: [id])
  productId String   @map("productId") @db.ObjectId
  quantity  Int
  createdAt DateTime @default(now())
  usersId   String?  @db.ObjectId
  Order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?  @db.ObjectId
}

model Order {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  userId          String            @db.ObjectId
  name            String
  company         String?
  region          String
  address         String
  city            String
  phone           String
  email           String
  orderedProducts OrderedProducts[]
  createdAt       DateTime          @default(now())
  subTotalPrice   Float
  totalPrice      Float
  shippingPrice   Float
  pdfLink         String?
  users           users[]
}

enum Size {
  XS
  S
  M
  L
  XL
}
